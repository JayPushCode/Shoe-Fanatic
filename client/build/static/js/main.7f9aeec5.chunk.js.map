{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/Footer/index.js","pages/Nike.js","components/CategoryMenu/index.js","pages/Home.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Jordan.js","pages/Converse.js","pages/Vans.js","pages/Adidas.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","cart","cartOpen","categories","currentCategory","store","createStore","state","action","type","actions","product","map","_id","purchaseQuantity","newState","filter","length","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","useSelector","dispatch","useDispatch","image","name","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","Footer","style","backgroundImage","width","height","marginTop","textAlign","color","fontWeight","Nike","marginLeft","marginRight","filterProducts","slice","showItems","CategoryMenu","categoryData","page","variant","Home","overflow","webkitTouchCallout","webkitUserSelect","khtmlUserSelect","mozUserSelect","msUserSelect","userSelect","objectFit","position","top","left","transform","zIndex","fontSize","fontFamily","whiteSpace","textShadow","cursor","objectPosition","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Detail","id","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","clear","paddingTop","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","handleFormSubmit","error","event","preventDefault","mutationResponse","handleChange","onSubmit","href","Signup","addUser","Object","values","firstName","lastName","Nav","textDecoration","listStyle","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Jordan","Converse","Vans","Adidas","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7f9aeec5.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport * as  actions from './actions';\n\nconst initialState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: '',\n}\n\n// switch statement that takes in the current action\nexport const reducer = (state = initialState, action) => {\n  // each action affects the state somehow and returns the state to be accessed anywhere in the application\n  switch (action.type) {\n    case actions.UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case actions.ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case actions.ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    case actions.UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n    case actions.REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case actions.CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case actions.TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case actions.UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case actions.UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // return the state in the case that no action is taken\n    default:\n      return state;\n  }\n};\n\n","import { createStore } from 'redux';\nimport { reducer } from './reducers';\n// create store that contains all of the global state\nconst store = createStore(reducer);\n\nexport default store;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction ProductItem(item) {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <span>${price}</span>\n        <div>{quantity} in stock</div>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction ProductList() {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <div style={{ backgroundImage: 'linear-gradient(315deg, #a71d31 0%, #3f0d12 74%)', width: '100%', height: '12vh', marginTop: '3%', textAlign: 'center' }}>\n            <br/>\n            <h3 style={{ color: 'white', fontWeight: 'bold' }}>Shoe Fanatic</h3>\n            <span style={{ color: 'white' }}>© 2022 Shoe Fanatic</span>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useEffect } from \"react\";\nimport Footer from \"../components/Footer\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport ProductItem from \"../components/ProductItem\";\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Nike() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  }\n  return (\n    <div style={{ marginTop: \"1%\" }}>\n      <CategoryMenu />\n      <div className=\"mx-2\">\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\n          {filterProducts().slice(0,8, state.showItems).map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Nike;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Route, Link }  from 'react-router-dom';\nimport Nike from \"../../pages/Nike\";\n\n\nfunction CategoryMenu() {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch()\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  return (\n    <div className='categoryBtns'>\n      <Route>\n        <Link to=\"/nike\" page={Nike}>\n          <button variant=\"contained\">Nike</button>\n        </Link>\n        <Link to=\"/jordan\">\n          <button variant=\"contained\">Jordan</button>\n        </Link>\n        <Link to=\"/converse\">\n          <button variant=\"contained\">Converse</button>\n        </Link>\n        <Link to=\"/vans\">\n          <button variant=\"contained\">Vans</button>\n        </Link>\n        <Link to=\"/adidas\">\n          <button variant=\"contained\">Adidas</button>\n        </Link>\n      </Route>\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Footer from \"../components/Footer\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\" style={{ overflow: 'hidden' }}>\n      <div\n        className=\"headerImgDiv\"\n        style={{\n          webkitTouchCallout: \"none\",\n          webkitUserSelect: \"none\",\n          khtmlUserSelect: \"none\",\n          mozUserSelect: \"none\",\n          msUserSelect: \"none\",\n          userSelect: \"none\",\n          width: \"100vw\",\n          height: \"60vh\",\n          objectFit: \"contain\",\n        }}\n      >\n        <h1\n          style={{\n            position: \"absolute\",\n            top: \"35%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n            zIndex: \"1\",\n            fontSize: \"180px\",\n            fontFamily: \"Montserrat\",\n            fontWeight: \"550\",\n            whiteSpace: \"nowrap\",\n            color: \"white\",\n            textShadow:\n              \"0 1px 1px rgb(0 0 0 / 15%), 0 2px 2px rgb(0 0 0 / 15%), 0 4px 4px rgb(0 0 0 / 15%), 0 6px 8px rgb(0 0 0 / 15%), 0 8px 16px rgb(0 0 0 / 15%)\",\n            cursor: \"default\",\n          }}\n        >\n          {\" \"}\n          SHOE FANATIC{\" \"}\n        </h1>\n        <img\n          src=\"../images/MJ-header.jpg\"\n          style={{\n            width: \"inherit\",\n            height: \"inherit\",\n            objectFit: \"cover\",\n            objectPosition: \"50% 90%\",\n            filter: \"contrast(1.09)\",\n            // filter: \"blur(1px)\",\n            transform: \"scale(1.0)\",\n          }}\n        ></img>\n      </div>\n      <CategoryMenu />\n      <ProductList />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useDispatch } from 'react-redux';\n\nimport './style.css';\n\n\nconst CartItem = ({ item }) => {\n\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n          <div><strong>${item.price}</strong></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  // Code that sends user to \"stripe.com\" to pay. *********************\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n  // ******************************************************************\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\" style={{ cursor: 'pointer' }}>\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  const PaymentForm = ({ checkoutToken, nextStep, backStep, shippingData, onCaptureCheckout }) => {\n    const handleSubmit = async (event, elements, stripe) => {\n      event.preventDefault();\n  \n      if (!stripe || !elements) return;\n  \n      const cardElement = elements.getElement(CardElement);\n  \n      const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\n  \n      if (error) {\n        console.log('[error]', error);\n      } else {\n        const orderData = {\n          line_items: checkoutToken.live.line_items,\n          customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\n          shipping: { name: 'International', street: shippingData.address1, town_city: shippingData.city, county_state: shippingData.shippingSubdivision, postal_zip_code: shippingData.zip, country: shippingData.shippingCountry },\n          fulfillment: { shipping_method: shippingData.shippingOption },\n          payment: {\n            gateway: 'stripe',\n            stripe: {\n              payment_method_id: paymentMethod.id,\n            },\n          },\n        };\n  \n        onCaptureCheckout(checkoutToken.id, orderData);\n  \n        nextStep();\n      }\n    };\n  \n    return (\n      <>\n        <Divider />\n        <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\n        <Elements stripe={stripePromise}>\n          <ElementsConsumer>{({ elements, stripe }) => (\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n              <CardElement />\n              <br /> <br />\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Button variant=\"outlined\" onClick={backStep}>Back</Button>\n                <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\n                  Pay {checkoutToken.live.subtotal.formatted_with_symbol}\n                </Button>\n              </div>\n            </form>\n          )}\n          </ElementsConsumer>\n        </Elements>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Footer from \"../components/Footer\";\n\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction Detail() {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"productPage container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n<div className='detailPage'>\n        <section className='detailLeft'>\n          <img\n              // style={{ height: \"40%\", width: \"40%\"}}\n              src={`/images/${currentProduct.image}`}\n              alt={currentProduct.name}\n            />\n        </section>\n        <section className=\"detailRight\">\n <h2>{currentProduct.name}</h2>\n          <p>{currentProduct.description}</p>\n        <div className='detailPrice'>\n          <p>\n            <strong>Price:</strong>{' '}${currentProduct.price}{' '}<br></br>\n            <div className='detailBtns'>\n            <button onClick={addToCart} >Add to Cart</button><br></br>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n            </div>\n          </p>\n          </div>\n          </section>\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      {/* <Cart /> */}\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"login\">\n      <h4>Login</h4>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"text_area\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChange}\n            className=\"text_input\"\n          />\n        </div>\n        <div className=\"text_area\">\n          <input\n            type=\"text\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange}\n            className=\"text_input\"\n          />\n        </div>\n        <input type=\"submit\" value=\"LOGIN\" className=\"btn\" />\n      </form>\n      <a className=\"link\" href=\"/signup\">\n        Sign Up\n      </a>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (error) {\n      console.log(Object.values(error));\n    }\n\n    try {\n      const mutationResponse = await addUser({\n        variables: {\n          email: formState.email,\n          password: formState.password,\n          firstName: formState.firstName,\n          lastName: formState.lastName,\n        },\n      });\n      const token = mutationResponse.data.addUser.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"signup\">\n      <h4>Sign-Up</h4>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"text_area\">\n          <input\n            type=\"firstName\"\n            id=\"firstName\"\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            onChange={handleChange}\n            className=\"text_input\"\n          />\n        </div>\n        <div className=\"text_area\">\n          <input\n            type=\"lastName\"\n            id=\"lastName\"\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            onChange={handleChange}\n            className=\"text_input\"\n          />\n          </div>\n        <div className=\"text_area\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChange}\n            className=\"text_input\"\n          />\n        </div>\n        <div className=\"text_area\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange}\n            className=\"text_input\"\n          />\n        </div>\n        <input type=\"submit\" value=\"SIGN UP\" className=\"btn\" />\n      </form>\n      <a className=\"link\" href=\"/login\">\n        Login\n      </a>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Route, Link }  from 'react-router-dom';\nimport Cart from \"../Cart\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"headerNav\" style={{ listStyle: \"none\"}}>\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\" style={{ textDecoration: 'none' }}>\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <a href=\"/\" onClick={() => Auth.logout()}  style={{ textDecoration: 'none' }}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"headerNav\" style={{ listStyle: \"none\" }}>\n          <li className=\"mx-1\">\n            <Link to=\"/signup\"  style={{ textDecoration: 'none' }}>\n              Sign-up\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\"  style={{ textDecoration: 'none' }}>\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"headerNav px-1\">\n      <h1>\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n            Shoe Fanatic\n        </Link>\n      </h1>\n    <div className=\"headerLinks\">\n      <nav>\n        {showNavigation()}\n      </nav>\n      <Cart />\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, { useEffect } from \"react\";\nimport Footer from \"../components/Footer\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport ProductItem from \"../components/ProductItem\";\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Jordan() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  }\n  return (\n    <div style={{ marginTop: \"1%\" }}>\n      <CategoryMenu />\n      <div className=\"mx-2\">\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\n        {filterProducts().slice(8,16, state.showItems).map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Jordan;\n","import React, { useEffect } from \"react\";\nimport Footer from \"../components/Footer\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport ProductItem from \"../components/ProductItem\";\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Converse() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  }\n  return (\n    <div style={{ marginTop: \"1%\" }}>\n      <CategoryMenu />\n      <div className=\"mx-2\">\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\n        {filterProducts().slice(16,24, state.showItems).map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Converse;\n","import React, { useEffect } from \"react\";\nimport Footer from \"../components/Footer\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport ProductItem from \"../components/ProductItem\";\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Vans() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  }\n  return (\n    <div style={{ marginTop: \"1%\" }}>\n      <CategoryMenu />\n      <div className=\"mx-2\">\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\n        {filterProducts().slice(24,32, state.showItems).map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Vans;\n","import React, { useEffect } from \"react\";\nimport Footer from \"../components/Footer\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport ProductItem from \"../components/ProductItem\";\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Adidas() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  }\n  return (\n    <div style={{ marginTop: \"1%\" }}>\n      <CategoryMenu />\n      <div className=\"mx-2\">\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\n        {filterProducts().slice(32,40, state.showItems).map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Adidas;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport './pages/Signup-Login.css';\nimport Nike from './pages/Nike';\nimport Jordan from './pages/Jordan';\nimport Converse from './pages/Converse';\nimport Vans from './pages/Vans';\nimport Adidas from './pages/Adidas';\n\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <div>\n    <ApolloProvider client={client}>\n      <Router>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/nike\" component={Nike} />\n              <Route exact path=\"/jordan\" component={Jordan} />\n              <Route exact path=\"/converse\" component={Converse} />\n              <Route exact path=\"/vans\" component={Vans} />\n              <Route exact path=\"/adidas\" component={Adidas} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n      </Router>\n    </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}