{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","components/Footer/index.js","utils/queries.js","utils/helpers.js","components/ProductItem/index.js","assets/spinner.gif","pages/Nike.js","components/CategoryMenu/index.js","components/ProductList1/index.js","pages/Home.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Jordan.js","pages/Converse.js","pages/Vans.js","pages/Adidas.js","components/Page2/index.js","components/Page3/index.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","cart","cartOpen","categories","currentCategory","store","createStore","state","action","type","actions","product","map","_id","purchaseQuantity","newState","filter","length","Footer","style","backgroundImage","width","height","marginTop","textAlign","color","fontWeight","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","useSelector","dispatch","useDispatch","image","name","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","Nike","useQuery","loading","data","useEffect","forEach","then","marginLeft","marginRight","filterProducts","slice","showItems","spinner","CategoryMenu","categoryData","category","page","variant","ProductList1","useState","numberOfPages","Array","fill","v","i","scrollTo","Home","overflow","webkitTouchCallout","webkitUserSelect","khtmlUserSelect","mozUserSelect","msUserSelect","userSelect","objectFit","position","top","left","transform","zIndex","fontSize","fontFamily","whiteSpace","textShadow","cursor","objectPosition","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","push","variables","Detail","id","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","clear","paddingTop","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","handleFormSubmit","error","event","preventDefault","mutationResponse","handleChange","onSubmit","href","Signup","addUser","Object","values","firstName","lastName","Nav","textDecoration","listStyle","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Jordan","Converse","Vans","Adidas","Page2","component","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","Page3","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.217fa3d0.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import { useReducer } from 'react';\r\nimport * as  actions from './actions';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  cart: [],\r\n  cartOpen: false,\r\n  categories: [],\r\n  currentCategory: '',\r\n}\r\n\r\n// switch statement that takes in the current action\r\nexport const reducer = (state = initialState, action) => {\r\n  // each action affects the state somehow and returns the state to be accessed anywhere in the application\r\n  switch (action.type) {\r\n    case actions.UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case actions.ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case actions.ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n    case actions.UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map((product) => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity;\r\n          }\r\n          return product;\r\n        }),\r\n      };\r\n    case actions.REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((product) => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case actions.CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case actions.TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n\r\n    case actions.UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case actions.UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    // return the state in the case that no action is taken\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducers';\r\n// create store that contains all of the global state\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{ backgroundImage: 'linear-gradient(315deg, #a71d31 0%, #3f0d12 74%)', width: '100%', height: '12vh', marginTop: '3%', textAlign: 'center' }}>\r\n            <br/>\r\n            <h3 style={{ color: 'white', fontWeight: 'bold' }}>Shoe Fanatic</h3>\r\n            <span style={{ color: 'white' }}>© 2022 Shoe Fanatic</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nfunction ProductItem(item) {\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <span>${price}</span>\r\n        <div>{quantity} in stock</div>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport ProductItem from \"../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Nike() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n          {filterProducts().slice(0,8, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nike;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Route, Link }  from 'react-router-dom';\r\nimport Nike from \"../../pages/Nike\";\r\n\r\n\r\nfunction CategoryMenu() {\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch()\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  return (\r\n    <div className='categoryBtns'>\r\n      <Route>\r\n        <Link to=\"/nike\" page={Nike}>\r\n          <button variant=\"contained\">Nike</button>\r\n        </Link>\r\n        <Link to=\"/jordan\">\r\n          <button variant=\"contained\">Jordan</button>\r\n        </Link>\r\n        <Link to=\"/converse\">\r\n          <button variant=\"contained\">Converse</button>\r\n        </Link>\r\n        <Link to=\"/vans\">\r\n          <button variant=\"contained\">Vans</button>\r\n        </Link>\r\n        <Link to=\"/adidas\">\r\n          <button variant=\"contained\">Adidas</button>\r\n        </Link>\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../components/Footer\";\r\nimport CategoryMenu from \"../../components/CategoryMenu\";\r\nimport ProductItem from \"../../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Router, Link } from 'react-router-dom';\r\n\r\nfunction ProductList1() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [numberOfPages, setNumberOfPages] = useState(0);\r\n\r\n  const pages = new Array(numberOfPages).fill(null).map((v, i) => i);\r\n\r\n\r\n  const gotoPrevious = () => {\r\n    setPageNumber(Math.max(0, pageNumber - 1));\r\n  };\r\n\r\n  const gotoNext = () => {\r\n    setPageNumber(Math.min(2, pageNumber + 1));\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(0,15, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n        <br/>\r\n      </div>\r\n      <div >\r\n            <div>\r\n              <p>Page 1</p>\r\n              <Link to=\"/page2\">\r\n              <button onClick={window.scrollTo(0, 0)}>Next</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList1;","import React from \"react\";\r\nimport ProductList1 from \"../components/ProductList1\";\r\n// import Page2 from \"../components/Page2\";\r\n// import ProductList3 from \"../components/ProductList3\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\" style={{ overflow: 'hidden' }}>\r\n      <div\r\n        className=\"headerImgDiv\"\r\n        style={{\r\n          webkitTouchCallout: \"none\",\r\n          webkitUserSelect: \"none\",\r\n          khtmlUserSelect: \"none\",\r\n          mozUserSelect: \"none\",\r\n          msUserSelect: \"none\",\r\n          userSelect: \"none\",\r\n          width: \"100vw\",\r\n          height: \"60vh\",\r\n          objectFit: \"contain\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"35%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%,-50%)\",\r\n            zIndex: \"1\",\r\n            fontSize: \"180px\",\r\n            fontFamily: \"Montserrat\",\r\n            fontWeight: \"550\",\r\n            whiteSpace: \"nowrap\",\r\n            color: \"white\",\r\n            textShadow:\r\n              \"0 1px 1px rgb(0 0 0 / 15%), 0 2px 2px rgb(0 0 0 / 15%), 0 4px 4px rgb(0 0 0 / 15%), 0 6px 8px rgb(0 0 0 / 15%), 0 8px 16px rgb(0 0 0 / 15%)\",\r\n            cursor: \"default\",\r\n          }}\r\n          className=\"homeHeaderText\"\r\n        >\r\n          {\" \"}\r\n          SHOE FANATIC{\" \"}\r\n        </h1>\r\n        <img\r\n          src=\"../images/MJ-header.jpg\"\r\n          style={{\r\n            width: \"inherit\",\r\n            height: \"inherit\",\r\n            objectFit: \"cover\",\r\n            objectPosition: \"50% 90%\",\r\n            filter: \"contrast(1.09)\",\r\n            // filter: \"blur(1px)\",\r\n            transform: \"scale(1.0)\",\r\n          }}\r\n        ></img>\r\n      </div>\r\n      <CategoryMenu />\r\n      <ProductList1 />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './style.css';\r\n\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <div className=\"flex-row\">\r\n      <div className=\"cartItemImage\">\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}</div>\r\n        <div className=\"Qty\">\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n          <div className=\"itemPrice\"><strong>${item.price}</strong></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  // Code that sends user to \"stripe.com\" to pay. *********************\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n  // ******************************************************************\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\" style={{ cursor: 'pointer' }}>\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const PaymentForm = ({ checkoutToken, nextStep, backStep, shippingData, onCaptureCheckout }) => {\r\n    const handleSubmit = async (event, elements, stripe) => {\r\n      event.preventDefault();\r\n  \r\n      if (!stripe || !elements) return;\r\n  \r\n      const cardElement = elements.getElement(CardElement);\r\n  \r\n      const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n  \r\n      if (error) {\r\n        console.log('[error]', error);\r\n      } else {\r\n        const orderData = {\r\n          line_items: checkoutToken.live.line_items,\r\n          customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\r\n          shipping: { name: 'International', street: shippingData.address1, town_city: shippingData.city, county_state: shippingData.shippingSubdivision, postal_zip_code: shippingData.zip, country: shippingData.shippingCountry },\r\n          fulfillment: { shipping_method: shippingData.shippingOption },\r\n          payment: {\r\n            gateway: 'stripe',\r\n            stripe: {\r\n              payment_method_id: paymentMethod.id,\r\n            },\r\n          },\r\n        };\r\n  \r\n        onCaptureCheckout(checkoutToken.id, orderData);\r\n  \r\n        nextStep();\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Divider />\r\n        <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\r\n        <Elements stripe={stripePromise}>\r\n          <ElementsConsumer>{({ elements, stripe }) => (\r\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n              <CardElement />\r\n              <br /> <br />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n                <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\r\n                  Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n          </ElementsConsumer>\r\n        </Elements>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport Footer from \"../components/Footer\";\r\n\r\nimport Cart from '../components/Cart';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport spinner from '../assets/spinner.gif';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nfunction Detail() {\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"productPage container my-1\">\r\n          <Link to=\"/\">← Back to Products</Link>\r\n<div className='detailPage'>\r\n        <section className='detailLeft'>\r\n          <img\r\n              // style={{ height: \"40%\", width: \"40%\"}}\r\n              src={`/images/${currentProduct.image}`}\r\n              alt={currentProduct.name}\r\n            />\r\n        </section>\r\n        <section className=\"detailRight\">\r\n <h2>{currentProduct.name}</h2>\r\n          <p>{currentProduct.description}</p>\r\n        <div className='detailPrice'>\r\n          <p>\r\n            <strong>Price:</strong>{' '}${currentProduct.price}{' '}<br></br>\r\n            <div className='detailBtns'>\r\n            <button onClick={addToCart} >Add to Cart</button><br></br>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n            </div>\r\n          </p>\r\n          </div>\r\n          </section>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      {/* <Cart /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { LOGIN } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h4>Login</h4>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"text_area\">\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange}\r\n            className=\"text_input\"\r\n          />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            className=\"text_input\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"LOGIN\" className=\"btn\" />\r\n      </form>\r\n      <a className=\"link\" href=\"/signup\">\r\n        Sign Up\r\n      </a>\r\n      <a className=\"link\" href=\"/\">\r\n        Home\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (error) {\r\n      console.log(Object.values(error));\r\n    }\r\n\r\n    try {\r\n      const mutationResponse = await addUser({\r\n        variables: {\r\n          email: formState.email,\r\n          password: formState.password,\r\n          firstName: formState.firstName,\r\n          lastName: formState.lastName,\r\n        },\r\n      });\r\n      const token = mutationResponse.data.addUser.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <h4>Sign-Up</h4>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"text_area\">\r\n          <input\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            onChange={handleChange}\r\n            className=\"text_input\"\r\n          />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <input\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            onChange={handleChange}\r\n            className=\"text_input\"\r\n          />\r\n          </div>\r\n        <div className=\"text_area\">\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange}\r\n            className=\"text_input\"\r\n          />\r\n        </div>\r\n        <div className=\"text_area\">\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            className=\"text_input\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"SIGN UP\" className=\"btn\" />\r\n      </form>\r\n      <a className=\"link\" href=\"/login\">\r\n        Login\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Route, Link }  from 'react-router-dom';\r\nimport Cart from \"../Cart\";\r\n// import SearchBar from \"../SearchBar/SearchBar\";\r\n// import ShoeData from \"../../Data.json\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"headerNav\" style={{ listStyle: \"none\"}}>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\" style={{ textDecoration: 'none' }}>\r\n              Order History\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <a href=\"/\" onClick={() => Auth.logout()}  style={{ textDecoration: 'none' }}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"headerNav\" style={{ listStyle: \"none\" }}>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\"  style={{ textDecoration: 'none' }}>\r\n              Sign-up\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\"  style={{ textDecoration: 'none' }}>\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"headerNav px-1\">\r\n      <h1>\r\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n            Shoe Fanatic\r\n        </Link>\r\n      </h1>\r\n      {/* <SearchBar placeholder=\"Search...\" data={ShoeData} /> */}\r\n    <div className=\"headerLinks\">\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n      <Cart />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React, { useEffect } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport ProductItem from \"../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Jordan() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(8,16, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jordan;\r\n","import React, { useEffect } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport ProductItem from \"../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Converse() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(16,24, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Converse;\r\n","import React, { useEffect } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport ProductItem from \"../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Vans() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(24,32, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vans;\r\n","import React, { useEffect } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport ProductItem from \"../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Adidas() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(32,40, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adidas;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../components/Footer\";\r\nimport CategoryMenu from \"../../components/CategoryMenu\";\r\nimport ProductItem from \"../../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Router, Link } from 'react-router-dom';\r\n\r\nfunction Page2() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [numberOfPages, setNumberOfPages] = useState(0);\r\n\r\n  const pages = new Array(numberOfPages).fill(null).map((v, i) => i);\r\n\r\n\r\n  const gotoPrevious = () => {\r\n    setPageNumber(Math.max(0, pageNumber - 1));\r\n  };\r\n\r\n  const gotoNext = () => {\r\n    setPageNumber(Math.min(2, pageNumber + 1));\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(15,30, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n        <br/>\r\n      </div>\r\n      <div >\r\n            <div>\r\n              <p>Page 2</p>\r\n              <Link to=\"/\">\r\n              <button onClick={window.scrollTo(0, 0)}>Previous</button>\r\n              </Link>\r\n              <Link to=\"/page3\">\r\n              <button onClick={window.scrollTo(0, 0)} component={Page2}>Next</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page2;","import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../components/Footer\";\r\nimport CategoryMenu from \"../../components/CategoryMenu\";\r\nimport ProductItem from \"../../components/ProductItem\";\r\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Router, Link } from 'react-router-dom';\r\n\r\nfunction Page2() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n  }\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n  const [numberOfPages, setNumberOfPages] = useState(0);\r\n\r\n  const pages = new Array(numberOfPages).fill(null).map((v, i) => i);\r\n\r\n\r\n  const gotoPrevious = () => {\r\n    setPageNumber(Math.max(0, pageNumber - 1));\r\n  };\r\n\r\n  const gotoNext = () => {\r\n    setPageNumber(Math.min(2, pageNumber + 1));\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"1%\" }}>\r\n      <CategoryMenu />\r\n      <div className=\"mx-2\">\r\n        <div className=\"flex-row\" style={{ marginTop: \".8%\", marginLeft: \"18%\", marginRight: \"18%\"}}>\r\n        {filterProducts().slice(30,40, state.showItems).map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n        {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n        <br/>\r\n      </div>\r\n      <div >\r\n            <div>\r\n              <p>Page 3</p>\r\n              <Link to=\"/page2\">\r\n              <button onClick={window.scrollTo(0, 0)}>Previous</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page2;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { Provider } from 'react-redux';\r\nimport store from './utils/store';\r\n\r\nimport Home from './pages/Home';\r\nimport Detail from './pages/Detail';\r\nimport NoMatch from './pages/NoMatch';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Nav from './components/Nav';\r\nimport Success from './pages/Success';\r\nimport OrderHistory from './pages/OrderHistory';\r\nimport './pages/Signup-Login.css';\r\nimport Nike from './pages/Nike';\r\nimport Jordan from './pages/Jordan';\r\nimport Converse from './pages/Converse';\r\nimport Vans from './pages/Vans';\r\nimport Adidas from './pages/Adidas';\r\nimport Page2 from \"./components/Page2\";\r\nimport Page3 from \"./components/Page3\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n    \r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/signup\" component={Signup} />\r\n              <Route exact path=\"/nike\" component={Nike} />\r\n              <Route exact path=\"/jordan\" component={Jordan} />\r\n              <Route exact path=\"/converse\" component={Converse} />\r\n              <Route exact path=\"/vans\" component={Vans} />\r\n              <Route exact path=\"/adidas\" component={Adidas} />\r\n              <Route exact path=\"/success\" component={Success} />\r\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\r\n              <Route exact path=\"/products/:id\" component={Detail} />\r\n              <Route exact path=\"/page2\" component={Page2} />\r\n              <Route exact path=\"/page3\" component={Page3} />\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n          </Provider>\r\n      </Router>\r\n    </ApolloProvider>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}